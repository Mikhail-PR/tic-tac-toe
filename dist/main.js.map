{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./blocks/control/scripts/control.js","webpack:///./blocks/control/scripts/menu/abstract-classes/_external-items.js","webpack:///./blocks/control/scripts/menu/abstract-classes/_game-init-item.js","webpack:///./blocks/control/scripts/menu/abstract-classes/_menu-item.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_end-game-window.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_game.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_menu-window.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_multiplayer-options.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_select-game-mode.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_singleplayer-options.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_stats-table.js","webpack:///./blocks/control/scripts/menu/concrete-classes/_stats.js","webpack:///./blocks/control/scripts/menu/menu.js","webpack:///./blocks/tic-tac-toe/scripts/_ai.js","webpack:///./blocks/tic-tac-toe/scripts/_board.js","webpack:///./blocks/tic-tac-toe/scripts/_cell.js","webpack:///./blocks/tic-tac-toe/scripts/_combination.js","webpack:///./blocks/tic-tac-toe/scripts/_player-stats.js","webpack:///./blocks/tic-tac-toe/scripts/_player.js","webpack:///./blocks/tic-tac-toe/scripts/_score.js","webpack:///./blocks/tic-tac-toe/scripts/tic-tac-toe.js","webpack:///./index.js","webpack:///./styles.scss"],"names":["Menu","TicTacToe","ExternalItems","id","hideStyleClass","element","document","querySelector","classList","remove","add","GameInitItem","props","formEl","clearInputValueShim","clearInputValue","bind","addInputValueShim","addInputValue","saveDefaultInputsValue","enable","inputs","forEach","input","addEventListener","removeEventListener","btn","linkedItem","Game","isValid","validate","menu","menuWindow","hide","gameInit","e","buttons","some","contains","target","preventDefault","gameProps","gamePropsInit","game","play","playerNames","gameMode","getAttribute","gameItem","items","find","item","name","push","value","inputElements","querySelectorAll","inputEl","defaultValue","MenuItem","btnSearchShim","btnSearch","btnElements","linkedItemSearch","btnId","targetItem","itemsPaths","buttonsId","btnEl","show","switch","listen","EndGameWindow","winnerAlertEl","SelectGameMode","exit","message","textContent","replay","GameClass","endGameWindow","stats","restart","destroy","update","MenuWindow","MultiplayerOptions","errAlert","hasDuplicates","arr","indexOf","lastIndexOf","inputNames","hasDuplicateName","SingleplayerOptions","getCheckElValue","playerSide","StatsTable","statsType","statElements","clear","JSON","parse","localStorage","getItem","emptyCheck","stat","insertStat","statHtml","win","draw","lose","tableRowEl","createElement","className","innerHTML","append","statEl","statsObj","Object","keys","length","Stats","singleplayerStats","multiplayerStats","init","itemsPathsInit","buttonsInit","itemsDependencies","Map","itemSearch","i","itemId","set","Ai","ticTacToe","player","board","methodsWeightsInit","moveCalculationMethods","method","getRandomCell","weight","getBlockEnemyComb","useEnemyWinComb","getCollectSelfComb","useSelfWinComb","preWinMove","isPreWin","methods","initialValue","weightSum","reduce","acc","curMethod","num","generateRandomInteger","n","min","max","Math","floor","random","flag","foundMethod","preWinCheck","winCombinations","enemyPlayer","preWinMethod","methodFind","winIsImpossible","winMethod","winEnemyIsImpossible","blockMethod","randomMethod","getRandomMethod","cell","makeMove","emptyСells","rows","row","figure","maxRank","combination","curRank","rank","getMaxRank","maxRankCombinations","filter","randomCellIndex","emptyСellsSearch","enemyComb","getRandomMaxRankComb","getMoveOnCombination","selfComb","isSelfPreWin","isEnemyPreWin","maxComb","cells","Board","clickedCellSearchShim","clickedCellSearch","cellsInit","winCombinationsInit","cellsCount","Array","j","Cell","isSingleplayer","Combination","winLineCoords","winLineCoordsCalculate","isDiagonal","clickedCell","curPlayer","count","combinationType","coordSteps","x1","x2","y1","y2","coords","winCombination","onlyDuplicatesCheck","firstVal","enemyPlayerWinComb","filteredEnemyPlayerWinComb","winCombinationsFilter","winCombinationsRankUp","winCombinationsCheck","gameOver","moveCounter","excludedCombinations","filtrationСombinations","filteredComb","includes","elNumber","containerEl","figureClass","figureStyleClasses","class","hideClass","figureEl","toggle","PlayerStats","Player","side","isAi","drawAnimationTime","activeStyle","setWinCombinations","scoreEl","score","Score","endGameCheck","enemyFigureDrawTime","delayedDrawMove","setDelay","drawMove","delayedDrawFirstMove","toggleActiveStyle","changeMove","valueEl","nameEl","players","gameOverAlertDelay","winLineAnimationTime","playerName","sideNumber","aiSide","aiPlayer","peoplePlayer","ai","lineImgHtml","winLineAreaEl","winLineImgEl","figureDrawTime","delay","delayedWinLineDraw","winLineDraw","f","ms","context","setTimeout","apply","arguments","curPlayerSearch","calculationMove","foundPlayer","winLineInit","winAlertShow","addPoint","saveStats","drawAlertShow","setWinnerMessage","close","isRestart","removeActiveStyle","destroyScoreBoard","reset","isDraw","playerName1","playerName2","playerStat","playerStatsSearch","createStorage","winnerStat","loserStat","statsSort","setItem","stringify","sort","a","b","requiredPlayer","singleplayer","multiplayer"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Menu } from './menu/menu';\r\nimport { TicTacToe } from '../../tic-tac-toe/scripts/tic-tac-toe';\r\n\r\nnew Menu(TicTacToe);","export class ExternalItems {\r\n    constructor(id, hideStyleClass) {\r\n        this.element = document.querySelector(`#${id}`);\r\n        this.hideStyleClass = hideStyleClass;\r\n    }\r\n\r\n    show() {\r\n        this.element.classList.remove(this.hideStyleClass);\r\n    }\r\n\r\n    hide() {\r\n        this.element.classList.add(this.hideStyleClass);\r\n    }\r\n}","import { MenuItem } from './_menu-item';\r\nimport { Game } from '../concrete-classes/_game';\r\n\r\nexport class GameInitItem extends MenuItem {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.formEl = this.element.querySelector('form');\r\n        this.clearInputValueShim = this.clearInputValue.bind(this);\r\n        this.addInputValueShim = this.addInputValue.bind(this);\r\n        this.saveDefaultInputsValue();\r\n    }\r\n\r\n    listen(enable) {\r\n        super.listen(enable);\r\n\r\n        if (enable) {\r\n            this.inputs.forEach(input => {\r\n                input.element.addEventListener('focus', this.clearInputValueShim);\r\n                input.element.addEventListener('blur', this.addInputValueShim);\r\n            });\r\n        } else {\r\n            this.inputs.forEach(input => {\r\n                input.element.removeEventListener('focus', this.clearInputValueShim);\r\n                input.element.removeEventListener('blur', this.addInputValueShim);\r\n            });\r\n        }\r\n    }\r\n\r\n    switch(btn) {\r\n        if (btn.linkedItem instanceof Game) {\r\n            let isValid = true;\r\n            if (this.validate) isValid = this.validate();\r\n\r\n            if (isValid) {\r\n                super.switch(btn);\r\n                this.menu.menuWindow.hide();\r\n\r\n                this.gameInit(btn);\r\n            }\r\n        } else {\r\n            super.switch(btn);\r\n        }\r\n    }\r\n\r\n    btnSearch(e) {\r\n        if (this.buttons.some(btn => btn.element.contains(e.target))) e.preventDefault();\r\n        super.btnSearch(e);\r\n    }\r\n\r\n    gameInit() {\r\n        const gameProps = this.gamePropsInit();\r\n        this.menu.game.play(gameProps);\r\n    }\r\n\r\n    gamePropsInit() {\r\n        const props = {};\r\n        props.playerNames = [];\r\n        props.gameMode = this.formEl.getAttribute('name');\r\n\r\n        const gameItem = this.menu.items.find(item => item instanceof Game);\r\n        props.gameItem = gameItem;\r\n\r\n        this.inputs.forEach(input => {\r\n            if (input.name === 'player-name') {\r\n                props.playerNames.push(input.element.value);\r\n            }\r\n        });\r\n\r\n        return props;\r\n    }\r\n\r\n    saveDefaultInputsValue() {\r\n        const inputElements = this.element.querySelectorAll('input[type=text]');\r\n        this.inputs = [];\r\n\r\n        inputElements.forEach(inputEl => {\r\n            this.inputs.push({\r\n                element: inputEl,\r\n                defaultValue: inputEl.value,\r\n                name: inputEl.getAttribute('name')\r\n            });\r\n        });\r\n    }\r\n\r\n    clearInputValue(e) {\r\n        this.inputs.forEach(input => {\r\n            if (input.element === e.target && e.target.value === input.defaultValue) {\r\n                e.target.value = '';\r\n            }\r\n        });\r\n    }\r\n\r\n    addInputValue(e) {\r\n        this.inputs.forEach(input => {\r\n            if (input.element === e.target && e.target.value === '') {\r\n                e.target.value = input.defaultValue;\r\n            }\r\n        });\r\n    }\r\n}","import { ExternalItems } from './_external-items';\r\n\r\nexport class MenuItem extends ExternalItems {\r\n    constructor(menu, id) {\r\n        super(id, 'control__block--hide');\r\n        this.menu = menu;\r\n        this.btnSearchShim = this.btnSearch.bind(this);\r\n    }\r\n\r\n    buttonsInit() {\r\n        this.buttons = [];\r\n        const btnElements = this.element.querySelectorAll('button');\r\n\r\n        const linkedItemSearch = btnId => {\r\n            let targetItem;\r\n\r\n            this.menu.itemsPaths.forEach((buttonsId, item) => {\r\n                buttonsId.forEach(id => {\r\n                    if (id === btnId) {\r\n                        targetItem = item;\r\n                    }\r\n                });\r\n            });\r\n            return targetItem;\r\n        }\r\n\r\n        btnElements.forEach(btnEl => {\r\n            const linkedItem = linkedItemSearch(btnEl.id);\r\n            this.buttons.push({\r\n                element: btnEl,\r\n                linkedItem: linkedItem\r\n            });\r\n        });\r\n    }\r\n\r\n    listen(enable) {\r\n        if (enable) {\r\n            this.element.addEventListener('click', this.btnSearchShim);\r\n        } else {\r\n            this.element.removeEventListener('click', this.btnSearchShim);\r\n        }\r\n    }\r\n\r\n    switch(btn) {\r\n        const targetItem = btn.linkedItem;\r\n        this.hide();\r\n        targetItem.show();\r\n    }\r\n\r\n    btnSearch(e) {\r\n        this.buttons.forEach(btn => {\r\n            if (btn.element.contains(e.target)) {\r\n                this.switch(btn);\r\n            }\r\n        });\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.listen(true);\r\n    }\r\n\r\n    hide() {\r\n        super.hide();\r\n        this.listen(false);\r\n    }\r\n}","import { GameInitItem } from '../abstract-classes/_game-init-item';\r\nimport { SelectGameMode } from './_select-game-mode';\r\n\r\nexport class EndGameWindow extends GameInitItem {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.winnerAlertEl = this.element.querySelector('#winner-alert');\r\n    }\r\n\r\n    switch(btn) {\r\n        super.switch(btn);\r\n        if (btn.linkedItem instanceof SelectGameMode) {\r\n            this.menu.game.exit();\r\n        }\r\n    }\r\n\r\n    setWinnerMessage(message) {\r\n        this.winnerAlertEl.textContent = message;\r\n    }\r\n\r\n    gameInit() {\r\n        this.menu.game.replay();\r\n    }\r\n}","import { ExternalItems } from '../abstract-classes/_external-items';\r\n\r\nexport class Game extends ExternalItems {\r\n    constructor(id, hideStyleClass, GameClass, menuWindow, endGameWindow, stats) {\r\n        super(id, hideStyleClass);\r\n        this.GameClass = GameClass;\r\n        this.menuWindow = menuWindow;\r\n        this.endGameWindow = endGameWindow;\r\n        this.stats = stats;\r\n    }\r\n\r\n    play(props) {\r\n        const Game = this.GameClass;\r\n        this.game = new Game(props);\r\n    }\r\n\r\n    replay() {\r\n        this.game.restart();\r\n    }\r\n\r\n    exit() {\r\n        this.game.destroy();\r\n    }\r\n\r\n    close() {\r\n        this.stats.update();\r\n        this.hide();\r\n        this.menuWindow.show();\r\n        this.endGameWindow.show();\r\n    }\r\n}","import { ExternalItems } from '../abstract-classes/_external-items';\r\n\r\nexport class MenuWindow extends ExternalItems {\r\n    constructor(...props) {\r\n        super(...props);\r\n    }\r\n}","import { GameInitItem } from '../abstract-classes/_game-init-item';\r\n\r\nexport class MultiplayerOptions extends GameInitItem {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.errAlert = this.element.querySelector('.control__form-err-alert');\r\n    }\r\n\r\n    validate() {\r\n        const hasDuplicates = arr => {\r\n            return arr.some(item => {\r\n                return arr.indexOf(item) !== arr.lastIndexOf(item);\r\n            });\r\n        }\r\n\r\n        const inputNames = [];\r\n        this.inputs.forEach(input => inputNames.push(input.element.value));\r\n        const hasDuplicateName = hasDuplicates(inputNames);\r\n\r\n        if (hasDuplicateName) {\r\n            this.errAlert.classList.remove('control__form-err-alert--hide');\r\n        } else {\r\n            this.errAlert.classList.add('control__form-err-alert--hide');\r\n        }\r\n        return !hasDuplicateName;\r\n    }\r\n}","import { MenuItem } from '../abstract-classes/_menu-item';\r\n\r\nexport class SelectGameMode extends MenuItem {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.listen(true);\r\n    }\r\n}","import { GameInitItem } from '../abstract-classes/_game-init-item';\r\n\r\nexport class SingleplayerOptions extends GameInitItem {\r\n    constructor(...props) {\r\n        super(...props);\r\n    }\r\n\r\n    gamePropsInit() {\r\n        const props = super.gamePropsInit();\r\n        const getCheckElValue = name => document.querySelector('input[name=\"' + name + '\"]:checked').value;\r\n        props.playerSide = getCheckElValue('side');\r\n\r\n        return props;\r\n    }\r\n}","import { ExternalItems } from '../abstract-classes/_external-items';\r\n\r\nexport class StatsTable extends ExternalItems {\r\n    constructor(id, hideStyleClass, statsType) {\r\n        super(id, hideStyleClass);\r\n        this.statsType = statsType;\r\n        this.statElements = [];\r\n    }\r\n\r\n    update() {\r\n        this.clear();\r\n        const stats = JSON.parse(localStorage.getItem('stats'));\r\n\r\n        if (this.emptyCheck(stats[this.statsType])) {\r\n            this.hide();\r\n        } else {\r\n            this.show();\r\n        }\r\n\r\n        stats[this.statsType].forEach(stat => {\r\n            if (stat) {\r\n                this.insertStat(stat);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    insertStat(stat) {\r\n        const statHtml = `<th class=\"stats__table-value\">${stat.name}</th>\r\n                            <th class=\"stats__table-value\">${stat.win}</th>\r\n                            <th class=\"stats__table-value\">${stat.draw}</th>\r\n                            <th class=\"stats__table-value\">${stat.lose}</th>`;\r\n\r\n        const tableRowEl = document.createElement('tr');\r\n        tableRowEl.className = 'stats__table-row';\r\n        tableRowEl.innerHTML = statHtml;\r\n        this.statElements.push(tableRowEl);\r\n\r\n        this.element.append(tableRowEl);\r\n    }\r\n\r\n    clear() {\r\n        this.statElements.forEach(statEl => {\r\n            statEl.remove();\r\n        });\r\n    }\r\n\r\n    emptyCheck(statsObj) {\r\n        return Object.keys(statsObj).length === 0;\r\n    }\r\n}","import { ExternalItems } from '../abstract-classes/_external-items';\r\nimport { StatsTable } from './_stats-table';\r\n\r\nexport class Stats extends ExternalItems {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.singleplayerStats = new StatsTable('singleplayer-stats-table', 'stats__table--hide', 'singleplayer');\r\n        this.multiplayerStats = new StatsTable('multiplayer-stats-table', 'stats__table--hide', 'multiplayer');\r\n    }\r\n\r\n    update() {\r\n        const stats = JSON.parse(localStorage.getItem('stats'));\r\n\r\n        if (!stats) {\r\n            this.hide();\r\n        } else {\r\n            this.singleplayerStats.update();\r\n            this.multiplayerStats.update();\r\n            this.show();\r\n        }\r\n    }\r\n}","import { SelectGameMode } from './concrete-classes/_select-game-mode';\r\nimport { SingleplayerOptions } from './concrete-classes/_singleplayer-options';\r\nimport { MultiplayerOptions } from './concrete-classes/_multiplayer-options';\r\nimport { EndGameWindow } from './concrete-classes/_end-game-window';\r\nimport { Game } from './concrete-classes/_game';\r\nimport { MenuWindow } from './concrete-classes/_menu-window';\r\nimport { Stats } from './concrete-classes/_stats';\r\n\r\n\r\nexport class Menu {\r\n    constructor(GameClass) {\r\n        this.element = document.querySelector('#control');\r\n        this.items = [];\r\n\r\n        this.init(GameClass);\r\n    }\r\n\r\n    init(GameClass) {\r\n        this.items.push(new SelectGameMode(this, 'select-game-mode'));\r\n        this.items.push(new SingleplayerOptions(this, 'singleplayer-options'));\r\n        this.items.push(new MultiplayerOptions(this, 'multiplayer-options'));\r\n        const endGameWindow = new EndGameWindow(this, 'end-game-window');\r\n        this.items.push(endGameWindow);\r\n        this.menuWindow = new MenuWindow('menu-window', 'menu-window--hide');\r\n        this.items.push(this.menuWindow);\r\n        const stats = new Stats('stats', 'stats--hide');\r\n        this.items.push(stats);\r\n        this.game = new Game('tic-tac-toe', 'tic-tac-toe--hide', GameClass, this.menuWindow, endGameWindow, stats);\r\n        this.items.push(this.game);\r\n\r\n        this.itemsPathsInit();\r\n\r\n        this.items.forEach(item => {\r\n            if (item.buttonsInit) item.buttonsInit();\r\n        });\r\n\r\n        stats.update();\r\n    }\r\n\r\n    itemsPathsInit() {\r\n        const itemsDependencies = {\r\n            'select-game-mode': ['back-btn', 'exit-btn'],\r\n            'singleplayer-options': ['singleplayer-btn'],\r\n            'multiplayer-options': ['multiplayer-btn'],\r\n            'tic-tac-toe': ['play-btn', 'play-more-btn']\r\n        };\r\n\r\n        this.itemsPaths = new Map();\r\n\r\n        const itemSearch = id => {\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (id === this.items[i].element.id) {\r\n                    return this.items[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let itemId in itemsDependencies) {\r\n            let item = itemSearch(itemId);\r\n\r\n            this.itemsPaths.set(item, itemsDependencies[itemId])\r\n        }\r\n    }\r\n}","export class Ai {\r\n    constructor(ticTacToe, player) {\r\n        this.board = ticTacToe.board;\r\n        this.player = player;\r\n\r\n        this.methodsWeightsInit();\r\n    }\r\n\r\n    methodsWeightsInit() {\r\n        this.moveCalculationMethods = [\r\n            {\r\n                method: this.getRandomCell.bind(this),\r\n                weight: 10\r\n            },\r\n            {\r\n                method: this.getBlockEnemyComb.bind(this),\r\n                weight: 40,\r\n                useEnemyWinComb: true\r\n            },\r\n            {\r\n                method: this.getCollectSelfComb.bind(this),\r\n                weight: 50,\r\n                useSelfWinComb: true\r\n            },\r\n            {\r\n                method: this.preWinMove.bind(this),\r\n                weight: 0,\r\n                isPreWin: true\r\n            }\r\n        ]\r\n    }\r\n\r\n    getRandomMethod(methods) {\r\n        const initialValue = 0;\r\n\r\n        const weightSum = methods.reduce((acc, curMethod) => acc + curMethod.weight, initialValue);\r\n\r\n        const num = this.generateRandomInteger(1, weightSum);\r\n        let n = 0;\r\n\r\n        for (let i = 0; i < methods.length; i++) {\r\n            n += methods[i].weight;\r\n\r\n            if (n >= num) {\r\n                return methods[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    generateRandomInteger(min, max) {\r\n        return Math.floor(min + Math.random() * (max + 1 - min));\r\n    }\r\n\r\n    methodFind(flag) {\r\n        const foundMethod = this.moveCalculationMethods.find(method => {\r\n            return method[flag] === true;\r\n        });\r\n        return foundMethod;\r\n    }\r\n\r\n    calculationMove() {\r\n        const isPreWin = this.preWinCheck(this.player.winCombinations) || this.preWinCheck(this.player.enemyPlayer.winCombinations);\r\n        let preWinMethod;\r\n\r\n        if (isPreWin) {\r\n            preWinMethod = this.methodFind('isPreWin');\r\n            preWinMethod.weight = 200;\r\n        }\r\n\r\n        const winIsImpossible = this.player.winCombinations.length === 0;\r\n\r\n        if (!this.winIsImpossible && winIsImpossible) {\r\n            const winMethod = this.methodFind('useSelfWinComb');\r\n            winMethod.weight = 0;\r\n            this.winIsImpossible = true;\r\n        }\r\n\r\n        const winEnemyIsImpossible = this.player.enemyPlayer.winCombinations.length === 0;\r\n\r\n        if (!this.winEnemyIsImpossible && winEnemyIsImpossible) {\r\n            const blockMethod = this.methodFind('useEnemyWinComb');\r\n            blockMethod.weight = 0;\r\n            this.winEnemyIsImpossible = true;\r\n        }\r\n\r\n        const randomMethod = this.getRandomMethod(this.moveCalculationMethods);\r\n        const cell = randomMethod.method();\r\n        this.player.makeMove(cell);\r\n\r\n        if (isPreWin) preWinMethod.weight = 0;\r\n    }\r\n\r\n    emptyСellsSearch() {\r\n        const emptyСells = [];\r\n\r\n        this.board.rows.forEach(row => {\r\n            row.forEach(cell => {\r\n                if (!cell.figure) {\r\n                    emptyСells.push(cell);\r\n                }\r\n            });\r\n        });\r\n\r\n        return emptyСells;\r\n    }\r\n\r\n    getMaxRank(winCombinations) {\r\n        let maxRank = 0;\r\n\r\n        winCombinations.forEach(combination => {\r\n            let curRank = combination.rank;\r\n\r\n            if (curRank > maxRank) {\r\n                maxRank = curRank;\r\n            }\r\n        });\r\n\r\n        return maxRank;\r\n    }\r\n\r\n    getRandomMaxRankComb(winCombinations) {\r\n        const maxRank = this.getMaxRank(winCombinations);\r\n\r\n        const maxRankCombinations = winCombinations.filter(combination => combination.rank === maxRank);\r\n\r\n        const randomCellIndex = this.generateRandomInteger(0, maxRankCombinations.length - 1);\r\n\r\n        return maxRankCombinations[randomCellIndex];\r\n    }\r\n\r\n    getRandomCell() {\r\n        const emptyСells = this.emptyСellsSearch();\r\n        const randomCellIndex = this.generateRandomInteger(0, emptyСells.length - 1);\r\n\r\n        return emptyСells[randomCellIndex];\r\n    }\r\n\r\n    getBlockEnemyComb() {\r\n        const enemyComb = this.getRandomMaxRankComb(this.player.enemyPlayer.winCombinations);\r\n\r\n        return this.getMoveOnCombination(enemyComb);\r\n    }\r\n\r\n    getCollectSelfComb() {\r\n        const selfComb = this.getRandomMaxRankComb(this.player.winCombinations);\r\n\r\n        return this.getMoveOnCombination(selfComb);\r\n    }\r\n\r\n    preWinMove() {\r\n        const isSelfPreWin = this.preWinCheck(this.player.winCombinations);\r\n\r\n        if (isSelfPreWin) {\r\n            return this.getCollectSelfComb();\r\n        }\r\n\r\n        const isEnemyPreWin = this.preWinCheck(this.player.enemyPlayer.winCombinations);\r\n\r\n        if (isEnemyPreWin) {\r\n            return this.getBlockEnemyComb();\r\n        }\r\n    }\r\n\r\n    preWinCheck(winCombinations) {\r\n        const maxComb = this.getMaxRank(winCombinations);\r\n\r\n        return maxComb === this.board.rows.length - 1;\r\n    }\r\n\r\n    getMoveOnCombination(combination) {\r\n        const emptyСells = combination.cells.filter(cell => !cell.figure);\r\n        const randomCellIndex = this.generateRandomInteger(0, emptyСells.length - 1);\r\n\r\n        return emptyСells[randomCellIndex];\r\n    }\r\n\r\n    reset() {\r\n        this.winIsImpossible = false;\r\n        this.winEnemyIsImpossible = false;\r\n        this.methodsWeightsInit();\r\n    }\r\n}","import { Cell } from './_cell';\r\nimport { Combination } from './_combination';\r\n\r\nexport class Board {\r\n    constructor(ticTacToe) {\r\n        this.ticTacToe = ticTacToe;\r\n        this.element = this.ticTacToe.element.querySelector('.tic-tac-toe__board');\r\n        this.rows = [];\r\n        this.winCombinations = [];\r\n        this.clickedCellSearchShim = this.clickedCellSearch.bind(this);\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.cellsInit();\r\n        this.winCombinationsInit();\r\n        if (this.ticTacToe.gameMode === 'multiplayer') this.listen(true);\r\n    }\r\n\r\n    cellsInit() {\r\n        this.cellsCount = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            this.rows[i] = new Array(3);\r\n\r\n            for (let j = 0; j < 3; j++) {\r\n                this.cellsCount++;\r\n                this.rows[i][j] = new Cell(this, this.cellsCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    winCombinationsInit() {\r\n        this.winCombinations = [];\r\n        const isSingleplayer = this.ticTacToe.gameMode === 'singleplayer';\r\n\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const combination = new Combination(isSingleplayer);\r\n\r\n            for (let j = 0; j < this.rows.length; j++) {\r\n                combination.cells.push(this.rows[i][j]);\r\n            }\r\n            combination.winLineCoords = this.winLineCoordsCalculate(i);\r\n            this.winCombinations.push(combination);\r\n            combination.cells.forEach(cell => cell.winCombinations.push(combination));\r\n        }\r\n\r\n        for (let j = 0; j < this.rows.length; j++) {\r\n            const combination = new Combination(isSingleplayer);\r\n\r\n            for (let i = 0; i < this.rows.length; i++) {\r\n                combination.cells.push(this.rows[i][j]);\r\n            }\r\n            combination.winLineCoords = this.winLineCoordsCalculate(j, 'columns');\r\n            this.winCombinations.push(combination);\r\n            combination.cells.forEach(cell => cell.winCombinations.push(combination));\r\n        }\r\n\r\n        let combination = new Combination(isSingleplayer);\r\n\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const j = i;\r\n            combination.cells.push(this.rows[i][j]);\r\n        }\r\n        combination.winLineCoords = this.winLineCoordsCalculate(null, 'secondary-diagonal');\r\n        combination.isDiagonal = true;\r\n        this.winCombinations.push(combination);\r\n        combination.cells.forEach(cell => cell.winCombinations.push(combination));\r\n\r\n        combination = new Combination(isSingleplayer);\r\n        let j = 0;\r\n\r\n        for (let i = 2; i > -1; i--) {\r\n            combination.cells.push(this.rows[i][j]);\r\n            j++\r\n        }\r\n        combination.winLineCoords = this.winLineCoordsCalculate(null, 'main-diagonal');\r\n        combination.isDiagonal = true;\r\n        this.winCombinations.push(combination);\r\n        combination.cells.forEach(cell => cell.winCombinations.push(combination));\r\n    }\r\n\r\n    listen(enable) {\r\n        if (enable) {\r\n            this.element.addEventListener('click', this.clickedCellSearchShim);\r\n        } else {\r\n            this.element.removeEventListener('click', this.clickedCellSearchShim);\r\n        }\r\n    }\r\n\r\n    clickedCellSearch(e) {\r\n        let clickedCell;\r\n\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            for (let j = 0; j < this.rows.length; j++) {\r\n                if (this.rows[i][j].element.contains(e.target)) {\r\n                    clickedCell = this.rows[i][j];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (clickedCell) {\r\n            if (!clickedCell.figure) {\r\n                this.ticTacToe.curPlayer.makeMove(clickedCell);\r\n            }\r\n        }\r\n    }\r\n\r\n    winLineCoordsCalculate(count, combinationType) {\r\n        const coordSteps = [16.6, 50, 83.4];\r\n        let x1 = 5;\r\n        let x2 = 100 - x1;\r\n        let y1 = coordSteps[count];\r\n        let y2 = y1;\r\n\r\n\r\n        if (combinationType === 'columns') {\r\n            [x1, y1] = [y1, x1];\r\n            [x2, y2] = [y2, x2];\r\n        }\r\n\r\n        if (combinationType === 'main-diagonal') {\r\n            y1 = x2;\r\n            y2 = x1;\r\n        }\r\n\r\n        if (combinationType === 'secondary-diagonal') {\r\n            y1 = x1;\r\n            y2 = x2;\r\n        }\r\n\r\n        const coords = {\r\n            x1: x1,\r\n            x2: x2,\r\n            y1: y1,\r\n            y2: y2\r\n        };\r\n\r\n        return coords;\r\n    }\r\n\r\n    winCombinationsCheck(cell) {\r\n        let winCombination;\r\n\r\n        cell.winCombinations.forEach(combination => {\r\n            if (this.onlyDuplicatesCheck(combination.cells)) {\r\n                winCombination = combination;\r\n            }\r\n        });\r\n\r\n        return winCombination;\r\n    }\r\n\r\n    onlyDuplicatesCheck(arr) {\r\n        let firstVal = arr[0].figure;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].figure !== firstVal || !arr[i].figure) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    endGameCheck(cell) {\r\n        const enemyPlayerWinComb = this.ticTacToe.curPlayer.enemyPlayer.winCombinations;\r\n        const filteredEnemyPlayerWinComb = this.winCombinationsFilter(cell.winCombinations, enemyPlayerWinComb);\r\n        this.ticTacToe.curPlayer.enemyPlayer.winCombinations = filteredEnemyPlayerWinComb;\r\n\r\n        const isSingleplayer = this.ticTacToe.gameMode === 'singleplayer';\r\n\r\n        if (isSingleplayer) {\r\n            this.winCombinationsRankUp(cell.winCombinations);\r\n        }\r\n\r\n        const winCombination = this.winCombinationsCheck(cell);\r\n        let gameOver = false;\r\n\r\n        if (winCombination || this.ticTacToe.moveCounter === this.cellsCount) {\r\n            this.ticTacToe.gameOver(winCombination);\r\n            gameOver = true;\r\n        }\r\n\r\n        if (gameOver) this.listen(false);\r\n\r\n        return gameOver;\r\n    }\r\n\r\n    winCombinationsRankUp(winCombinations) {\r\n        winCombinations.forEach(combination => combination.rank++);\r\n    }\r\n\r\n    winCombinationsFilter(excludedCombinations, filtrationСombinations) {\r\n        const filteredComb = filtrationСombinations.filter(combination => {\r\n            return !excludedCombinations.includes(combination);\r\n        });\r\n\r\n        return filteredComb;\r\n    }\r\n\r\n    destroy() {\r\n        this.rows.forEach(row => {\r\n            row.forEach(cell => {\r\n                if (cell.figure) {\r\n                    cell.destroy();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","export class Cell {\r\n    constructor(board, elNumber) {\r\n        this.containerEl = board.element;\r\n        this.element = this.containerEl.querySelector(`.tic-tac-toe__board > :nth-child(${elNumber})`);\r\n        this.winCombinations = [];\r\n        this.figure = null;\r\n    }\r\n\r\n    draw() {\r\n        const figureClass = this.figureStyleClasses.class;\r\n        const hideClass = this.figureStyleClasses.hideClass;\r\n        const figureEl = this.element.querySelector(`.${figureClass}`);\r\n\r\n        figureEl.classList.toggle(hideClass);\r\n        this.element.classList.toggle('tic-tac-toe__cell--active');\r\n    }\r\n\r\n    clear() {\r\n        const figureClass = this.figureStyleClasses.class;\r\n        const hideClass = this.figureStyleClasses.hideClass;\r\n        const figureEl = this.element.querySelector(`.${figureClass}`);\r\n\r\n        figureEl.classList.add(hideClass);\r\n        this.element.classList.remove('tic-tac-toe__cell--active');\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.winCombinations = [];\r\n        this.figureStyleClasses = null;\r\n        this.figure = null;\r\n    }\r\n}","export class Combination {\r\n    constructor(isSingleplayer) {\r\n        this.cells = [];\r\n        this.winLineCoords;\r\n        if (isSingleplayer) this.rank = 0;\r\n    }\r\n}","export class PlayerStats {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.win = 0;\r\n        this.draw = 0;\r\n        this.lose = 0;\r\n    }\r\n}","import { Score } from './_score';\r\n\r\nexport class Player {\r\n    constructor(ticTacToe, name, side, isAi, winCombinations) {\r\n        this.ticTacToe = ticTacToe;\r\n        this.board = this.ticTacToe.board;\r\n        this.name = name;\r\n        this.side = side;\r\n        this.figure = {\r\n            figureStyleClasses: {\r\n                class: this.side,\r\n                hideClass: `${this.side}--hide`\r\n            },\r\n            drawAnimationTime: 1000\r\n        }\r\n        this.isAi = isAi || false;\r\n        this.activeStyle = 'score__block--active';\r\n        this.setWinCombinations(winCombinations);\r\n\r\n        const scoreEl = this.ticTacToe.element.querySelector(`[name=${this.side}]`);\r\n        this.score = new Score(scoreEl, this.name);\r\n    }\r\n\r\n    setWinCombinations(winCombinations) {\r\n        this.winCombinations = winCombinations;\r\n    }\r\n\r\n    makeMove(cell) {\r\n        cell.figure = this.side;\r\n        cell.figureStyleClasses = this.figure.figureStyleClasses;\r\n        const gameOver = this.board.endGameCheck(cell);\r\n\r\n        const enemyFigureDrawTime = this.enemyPlayer.figure.drawAnimationTime;\r\n        const delayedDrawMove = this.ticTacToe.setDelay(this.drawMove, enemyFigureDrawTime, this);\r\n\r\n        if (!this.isAi) {\r\n            this.drawMove(cell, gameOver);\r\n        } else {\r\n            if (this.ticTacToe.moveCounter !== 1) {\r\n                delayedDrawMove(cell, gameOver);\r\n            } else {\r\n                const delayedDrawFirstMove = this.ticTacToe.setDelay(this.drawMove, 500, this);\r\n                delayedDrawFirstMove(cell, gameOver);\r\n            }\r\n        }\r\n    }\r\n\r\n    drawMove(cell, gameOver) {\r\n        cell.draw();\r\n        if (!gameOver) {\r\n            this.toggleActiveStyle();\r\n            this.ticTacToe.changeMove();\r\n        }\r\n    }\r\n\r\n    toggleActiveStyle() {\r\n        this.score.element.classList.toggle(this.activeStyle);\r\n    }\r\n\r\n    removeActiveStyle() {\r\n        this.score.element.classList.remove(this.activeStyle);\r\n    }\r\n}","export class Score {\r\n    constructor(element, name) {\r\n        this.count = 0;\r\n        this.element = element;\r\n        this.valueEl = this.element.querySelector('[name=value]');\r\n        this.valueEl.textContent = this.count;\r\n\r\n        if (name) {\r\n            this.nameEl = this.element.querySelector('[name=name]');\r\n            this.nameEl.textContent = name;\r\n        }\r\n    }\r\n\r\n    addPoint() {\r\n        this.count++;\r\n        this.valueEl.textContent = this.count;\r\n    }\r\n\r\n    destroy() {\r\n        this.count = 0;\r\n    }\r\n}","import { Board } from './_board';\r\nimport { Player } from './_player';\r\nimport { Ai } from './_ai';\r\nimport { Score } from './_score';\r\nimport { PlayerStats } from './_player-stats';\r\n\r\nexport class TicTacToe {\r\n    constructor(props) {\r\n        this.gameItem = props.gameItem;\r\n        this.element = document.querySelector('#tic-tac-toe');\r\n        this.gameMode = props.gameMode;\r\n        this.moveCounter = 0;\r\n        this.players = [];\r\n        this.activeStyle = `score__block--active`;\r\n        this.gameOverAlertDelay = 2000;\r\n        this.winLineAnimationTime = 2000;\r\n\r\n        const scoreEl = this.element.querySelector(`[name=draw]`);\r\n        this.score = new Score(scoreEl);\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    init(props) {\r\n        this.board = new Board(this);\r\n\r\n        props.playerNames.forEach((playerName, sideNumber) => {\r\n            if (this.gameMode === 'singleplayer') {\r\n                const aiSide = props.playerSide === 'cross' ? 'zero' : 'cross';\r\n                const aiPlayer = new Player(this, 'AI', aiSide, true, [...this.board.winCombinations]);\r\n                const peoplePlayer = new Player(this, playerName, props.playerSide, false, [...this.board.winCombinations]);\r\n\r\n                this.players.push(peoplePlayer);\r\n                this.players.push(aiPlayer);\r\n                this.ai = new Ai(this, aiPlayer);\r\n            } else {\r\n                this.players.push(new Player(this, playerName, sideNumber === 0 ? 'cross' : 'zero', false, [...this.board.winCombinations]));\r\n            }\r\n        });\r\n\r\n        this.players[0].enemyPlayer = this.players[1];\r\n        this.players[1].enemyPlayer = this.players[0];\r\n\r\n        this.curPlayer = this.players[0];\r\n        this.changeMove();\r\n    }\r\n\r\n    winLineInit(winCombination) {\r\n        const lineImgHtml = `<svg class=\"win-img\">\r\n        <line class=\"win-img__line\" x1=\"${winCombination.winLineCoords.x1}%\" y1=\"${winCombination.winLineCoords.y1}%\" x2=\"${winCombination.winLineCoords.x2}%\" y2=\"${winCombination.winLineCoords.y2}%\" stroke=\"black\" stroke-width=\"40\" stroke-linecap=\"round\"></line>\r\n        </svg>`;\r\n        this.winLineAreaEl = document.createElement('div');\r\n        this.winLineAreaEl.className = 'tic-tac-toe__win-line-area';\r\n        this.winLineAreaEl.innerHTML = lineImgHtml;\r\n        this.board.element.append(this.winLineAreaEl);\r\n\r\n        const winLineImgEl = this.winLineAreaEl.querySelector('.win-img');\r\n\r\n        const figureDrawTime = this.curPlayer.figure.drawAnimationTime;\r\n        const enemyFigureDrawTime = this.curPlayer.enemyPlayer.figure.drawAnimationTime;\r\n        const delay = this.curPlayer.isAi ? enemyFigureDrawTime + figureDrawTime : figureDrawTime;\r\n\r\n        const delayedWinLineDraw = this.setDelay(this.winLineDraw, delay, this);\r\n        delayedWinLineDraw(winLineImgEl, winCombination.isDiagonal);\r\n    }\r\n\r\n    winLineDraw(winLineImgEl, isDiagonal) {\r\n        winLineImgEl.classList.add(`win-img--draw${isDiagonal === true ? '-diagonal' : ''}`);\r\n    }\r\n\r\n    setDelay(f, ms, context) {\r\n        return function () {\r\n            setTimeout(() => f.apply(context, arguments), ms);\r\n        };\r\n    }\r\n\r\n    changeMove() {\r\n        this.moveCounter++;\r\n\r\n        if (this.moveCounter % 2 === 0) {\r\n            this.curPlayer = this.curPlayerSearch('zero');\r\n        } else {\r\n            this.curPlayer = this.curPlayerSearch('cross');\r\n        }\r\n\r\n        this.curPlayer.toggleActiveStyle();\r\n\r\n        if (this.gameMode === 'singleplayer') {\r\n            if (this.curPlayer.isAi) {\r\n                this.board.listen(false);\r\n                this.ai.calculationMove();\r\n            } else {\r\n                this.board.listen(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    curPlayerSearch(side) {\r\n        let foundPlayer;\r\n\r\n        this.players.forEach(player => {\r\n            if (player.side === side) {\r\n                foundPlayer = player;\r\n            }\r\n        });\r\n\r\n        return foundPlayer;\r\n    }\r\n\r\n    gameOver(winCombination) {\r\n        const delay = this.gameOverAlertDelay + this.winLineAnimationTime;\r\n\r\n        if (winCombination) {\r\n            this.winLineInit(winCombination);\r\n            this.setDelay(this.winAlertShow, delay, this)(winCombination);\r\n            this.curPlayer.score.addPoint();\r\n            this.saveStats();\r\n        } else {\r\n            this.setDelay(this.drawAlertShow, delay, this)();\r\n            this.curPlayer.toggleActiveStyle();\r\n            this.score.element.classList.toggle(this.activeStyle);\r\n            this.score.addPoint();\r\n            this.saveStats(true);\r\n        }\r\n    }\r\n\r\n    winAlertShow() {\r\n        this.gameItem.endGameWindow.setWinnerMessage(`${this.curPlayer.name} is winner by playing on the ${this.curPlayer.side} side!`);\r\n        this.gameItem.close();\r\n    }\r\n\r\n    drawAlertShow() {\r\n        this.gameItem.endGameWindow.setWinnerMessage('Draw!');\r\n        this.gameItem.close();\r\n    }\r\n\r\n    destroyScoreBoard() {\r\n        this.score.destroy();\r\n\r\n        this.players.forEach(player => {\r\n            player.score.destroy();\r\n        });\r\n    }\r\n\r\n    destroy(isRestart) {\r\n        this.board.destroy();\r\n        if (this.winLineAreaEl) this.winLineAreaEl.remove();\r\n        this.score.element.classList.remove(this.activeStyle);\r\n        this.players.forEach(player => player.removeActiveStyle());\r\n\r\n        if (!isRestart) this.destroyScoreBoard();\r\n    }\r\n\r\n    restart() {\r\n        this.destroy(true);\r\n        this.moveCounter = 0;\r\n        this.board.winCombinationsInit();\r\n        if (this.ai) this.ai.reset();\r\n        this.players.forEach(player => player.setWinCombinations([...this.board.winCombinations]));\r\n        this.curPlayer = this.players[0];\r\n        this.changeMove();\r\n\r\n        if (this.gameMode === 'multiplayer') this.board.listen(true);\r\n    }\r\n\r\n    saveStats(isDraw) {\r\n        let stats = JSON.parse(localStorage.getItem('stats'));\r\n\r\n        const playerName1 = this.curPlayer.name;\r\n        const playerName2 = this.curPlayer.enemyPlayer.name;\r\n\r\n        if (isDraw) {\r\n            if (stats === null) {\r\n                this.players.forEach(player => {\r\n                    const playerStat = new PlayerStats(player);\r\n                    playerStat.draw++;\r\n                });\r\n\r\n            } else {\r\n                this.players.forEach(player => {\r\n                    let playerStat = this.playerStatsSearch(player.name, stats);\r\n\r\n                    if (!playerStat) {\r\n                        playerStat = new PlayerStats(player.name);\r\n                        stats[this.gameMode].push(playerStat);\r\n                    }\r\n\r\n                    playerStat.draw++;\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (stats === null) {\r\n                stats = this.createStorage();\r\n\r\n                const winnerStat = new PlayerStats(playerName1);\r\n                const loserStat = new PlayerStats(playerName2);\r\n\r\n                winnerStat.win++;\r\n                loserStat.lose++;\r\n\r\n                stats[this.gameMode].push(winnerStat);\r\n                stats[this.gameMode].push(loserStat);\r\n\r\n            } else {\r\n                let winnerStat = this.playerStatsSearch(playerName1, stats);\r\n                let loserStat = this.playerStatsSearch(playerName2, stats);\r\n\r\n                if (!winnerStat) {\r\n                    winnerStat = new PlayerStats(playerName1);\r\n                    stats[this.gameMode].push(winnerStat);\r\n                }\r\n\r\n                if (!loserStat) {\r\n                    loserStat = new PlayerStats(playerName2);\r\n                    stats[this.gameMode].push(loserStat);\r\n                }\r\n\r\n                winnerStat.win++;\r\n                loserStat.lose++;\r\n            }\r\n        }\r\n\r\n        this.statsSort(stats[this.gameMode]);\r\n        localStorage.setItem('stats', JSON.stringify(stats));\r\n    }\r\n\r\n    statsSort(stats) {\r\n        stats.sort((a, b) => b.win - a.win);\r\n    }\r\n\r\n    playerStatsSearch(name, stats) {\r\n        let requiredPlayer;\r\n\r\n        for (let player in stats[this.gameMode]) {\r\n            const playerName = stats[this.gameMode][player].name;\r\n\r\n            if (playerName === name) {\r\n                requiredPlayer = stats[this.gameMode][player];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return requiredPlayer;\r\n    }\r\n\r\n    createStorage() {\r\n        const stats = {\r\n            singleplayer: [],\r\n            multiplayer: []\r\n        };\r\n\r\n        localStorage.setItem('stats', JSON.stringify(stats));\r\n\r\n        return stats;\r\n    }\r\n}","import './styles.scss';\r\nimport './blocks/control/scripts/control';\r\nimport './blocks/tic-tac-toe/scripts/tic-tac-toe';","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1607582955991\n      var cssReload = require(\"C:/Users/mixa7/Google Диск/projects/tic-tac-toe/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"reloadAll\":true,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}